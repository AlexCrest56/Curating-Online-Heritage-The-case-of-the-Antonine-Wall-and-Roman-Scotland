#TikTok Data processing. 

library(dplyr)
library(jsonlite)
library(tidyr)

xlsx_files <- list.files(pattern = "\\.xlsx$")
file_names <- c(print(xlsx_files))
file_names[[1]] <- NULL

combined_df <- data.frame()

for (file in file_names) {
    # Read the current file
    temp_df <- read_excel(file)
    
    combined_df <- rbind(combined_df, temp_df)
}

Comments <- toJSON(combined_df, pretty = TRUE)
write(Comments, "Comments.json")
Comments <- fromJSON("Comments.json", simplifyDataFrame = TRUE)
Comments$video_code <- gsub("\\..*$", "", Comments$Code)

grouped_comments <- Comments %>%
  group_by(video_code) %>%
  summarise(comments = list(data.frame(Code, User, Comment, Date, Likes)))


Posts <- read_excel("Posts.xlsx")
write_json(Posts, "Posts.json", pretty = TRUE)

  
# Inserting a dot between 'TT' and the numerical value in the 'Code' column
grouped_comments$video_code <- gsub("(TT)([0-9]+)", "\\1.\\2", grouped_comments$video_code)

combined_data <- left_join(Posts, grouped_comments, by = c("Code" = "video_code"))
# Inserting a dot between 'TT' and the numerical value in the 'Code' column
combined_data$Code <- gsub("(TT)([0-9]+)", "\\1.\\2", combined_data$Code)

#back to json
TikTok_Data <- toJSON(combined_data, pretty = TRUE)
write(TikTok_Data, path = "TikTok_Data.json", pretty = TRUE)


#Note. The codes for each emoji have been left in. These will turn up in the topic modelling, but will be considered when conducting this. For now they have been left in


# data then anonymised in python 
import json

# Load the JSON file
file_path = 'TikTok_Data.json'

with open(file_path, 'r') as file:
    data = json.load(file)

# Creating a dictionary to map old usernames to new ones
username_map = {}
auth_count = 1  # Counter for generating new usernames

# Function to get or create a new username
def get_new_username(old_username, username_map, auth_count):
    if old_username not in username_map:
        new_username = f"TT.Auth.{auth_count}"
        username_map[old_username] = new_username
        auth_count += 1
    return username_map[old_username], auth_count

# Iterating over the data to replace usernames
for entry in data:
    # Replace 'Username'
    if 'Username' in entry:
        old_username = entry['Username']
        entry['Username'], auth_count = get_new_username(old_username, username_map, auth_count)
    
    # Replace 'User' in 'comments'
    if 'comments' in entry:
        for comment in entry['comments']:
            if 'User' in comment:
                old_username = comment['User']
                comment['User'], auth_count = get_new_username(old_username, username_map, auth_count)

# Saving the modified data back to a JSON file
updated_file_path = 'Updated_TikTok_Data.json'
with open(updated_file_path, 'w') as file:
    json.dump(data, file, indent=4)

Data then manually uploaded to mongo db
